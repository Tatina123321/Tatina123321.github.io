(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

alert('Добро пожаловать, ' + prompt('Как Вас зовут?', ''));
var birthYear = parseInt(prompt('Введите год вашего рождения', ''));
var currentYear = 2019;

if (isFinite(birthYear)) {
  alert("\u0412\u0430\u0448 \u0432\u043E\u0437\u0440\u0430\u0441\u0442: ".concat(currentYear - birthYear));
} else {
  alert('Введите число');
}

var sideLength = prompt('Укажите длинну стороны квадрата:', '');
alert("\u041F\u0435\u0440\u0438\u043C\u0435\u0442\u0440 \u043A\u0432\u0430\u0434\u0440\u0430\u0442\u0430: ".concat(sideLength * 4));
var circleRadius = prompt('Укажите радиус окружности:', '');
alert("\u041F\u043B\u043E\u0449\u0430\u0434\u044C \u043E\u043A\u0440\u0443\u0436\u043D\u043E\u0441\u0442\u0438: ".concat(Math.round(Math.pow(circleRadius, 2) * Math.PI * 100) / 100));
var distance = prompt('Укажите расстояние в километрах между городами:', '');
var time = prompt('Укажите количество часов на дорогу:', '');

if (distance != null && time != null) {
  alert("\u041D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u0430\u044F \u0441\u043A\u043E\u0440\u043E\u0441\u0442\u044C: ".concat(Math.ceil(distance / time), " \u043A\u043C/\u0447\u0430\u0441"));
} else {
  alert('Введите значение');
}

var dollars = prompt('Сколько долларов вы хотите обменять?', '');
var rate = 0.91;
alert("\u0412\u044B \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u0435 ".concat(Math.round(dollars * rate * 100) / 100, " \u0435\u0432\u0440\u043E"));
var flashMemory = prompt('Укажите обьем флешки в Гб', '');
alert("\u0412 \u0412\u0430\u0448\u0435\u0439 \u0444\u043B\u0435\u0448\u043A\u0435 \u043F\u043E\u043C\u0435\u0441\u0442\u0438\u0442\u044C\u0441\u044F ".concat(Math.floor(flashMemory * 1024 / 820), " \u0444\u0430\u0439\u043B\u043E\u0432"));
var moneySum = prompt('Сколько гривен у вас есть?', '');
var chocolatePrice = prompt('Какая цена шоколадки?', '');
alert("\u0412\u044B \u043C\u043E\u0436\u0435\u0442\u0435 \u043A\u0443\u043F\u0438\u0442\u044C ".concat(Math.floor(moneySum / chocolatePrice), " \u0448\u043E\u043A\u043E\u043B\u0430\u0434\u043E\u043A \u0438 \u0443 \u0412\u0430\u0448 \u043E\u0441\u0442\u0430\u0442\u043E\u043A ").concat(Math.round(moneySum % chocolatePrice * 100) / 100, " \u0433\u0440\u0438\u0432\u0435\u043D"));
var num = prompt('Введите трехзначное число', '');
var result = '';

while (num > 0) {
  result += num % 10;
  num = parseInt(num / 10);
}

alert('Число: ' + result);
var deposit = prompt('Введите сумму вклада', '');
var month = 2;
var percent = 0.05;
alert("\u0421\u0443\u043C\u043C\u0430 \u043D\u0430\u0447\u0438\u0441\u043B\u0435\u043D\u043D\u0430\u044F \u043F\u043E \u043F\u0440\u043E\u0446\u0435\u043D\u0442\u0430\u043C: ".concat(Math.floor(deposit * month / 12 * percent * 100) / 100));

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
